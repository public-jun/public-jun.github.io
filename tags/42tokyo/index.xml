<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>42Tokyo on Get stronger one day at a time.</title><link>https://public-jun.github.io/tags/42tokyo/</link><description>Recent content in 42Tokyo on Get stronger one day at a time.</description><image><url>https://public-jun.github.io/first-blog-card-fs8.png</url><link>https://public-jun.github.io/first-blog-card-fs8.png</link></image><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Thu, 24 Feb 2022 21:28:39 +0900</lastBuildDate><atom:link href="https://public-jun.github.io/tags/42tokyo/index.xml" rel="self" type="application/rss+xml"/><item><title>enable_if 作ってみた</title><link>https://public-jun.github.io/cpp-enable-if/</link><pubDate>Thu, 24 Feb 2022 21:28:39 +0900</pubDate><guid>https://public-jun.github.io/cpp-enable-if/</guid><description>これを読むと enable_if の定義が分かります</description></item><item><title>c++98 で is_integral 実装</title><link>https://public-jun.github.io/cpp-is-integral/</link><pubDate>Wed, 23 Feb 2022 13:37:59 +0900</pubDate><guid>https://public-jun.github.io/cpp-is-integral/</guid><description>これを読めば c++98 で is_integral 自作できます</description></item><item><title>c++ における typename とは</title><link>https://public-jun.github.io/cpp-typename/</link><pubDate>Sun, 13 Feb 2022 19:19:37 +0900</pubDate><guid>https://public-jun.github.io/cpp-typename/</guid><description>1. はじめに STL コンテナを自作している時、 typename の使い方をしっかり理解していなかったので自分なりにまとめてみました。
2. typename とは cppreference.com typename の説明より
In the template parameter list of a template declaration, typename can be used as an alternative to class to declare type template parameters . Inside a declaration or a definition of a template, typename can be used to declare that a dependent qualified name is a type. c++ のテンプレート宣言時には、型名を明示する際に class の代わりに typename を使用してテンプレートパラメータを宣言することができます。 template&amp;lt;typename T&amp;gt; void f() {} template&amp;lt;class T&amp;gt; void f() {} これはどちらでもコンパイルが通ります。</description></item><item><title>HugoのサイトにTag機能を追加</title><link>https://public-jun.github.io/custom-taxonomies/</link><pubDate>Fri, 04 Feb 2022 15:39:20 +0900</pubDate><guid>https://public-jun.github.io/custom-taxonomies/</guid><description>きっかけ ブログにタグ機能が欲しかったから。
Taxonomyって何？？ Hugo includes support for user-defined groupings of content called taxonomies. Taxonomies are classifications of logical relationships between content.
タグやカテゴリなどのユーザーが定義した分類のことをタクソノミーという。
タクソノミー(Taxonomy)
コンテンツをグルーピングするための分類法
ターム(Term)
実際の具体的なタグやカテゴリの値
Taxonomyを使う Hugoはデフォルトでタグとカテゴリをサポートしている。
confingの設定 config.yml
taxonomies: category: categories tag: tags https://[サイトURL]/tags/
https://[サイトURL]/categories/
上記のURLにアクセスするとタグ一覧、カテゴリ一覧ページへアクセスできる。
ちなみにこのサイトでは
https://public-jun.github.io/tags/
https://public-jun.github.io/categories/
となる。
記事の Front matter内でタグ、カテゴリ追加 contents/posts/../記事.md
--- title: &amp;#34;HugoのサイトにTag機能を追加&amp;#34; date: 2022-02-04T15:39:20+09:00 draft: false tags: [42Tokyo, blog, Hugo, TIL] //追加 categories: [Tech] //追加 .</description></item><item><title>Hello World!!</title><link>https://public-jun.github.io/posts/my-first-posts/</link><pubDate>Thu, 03 Feb 2022 11:48:12 +0900</pubDate><guid>https://public-jun.github.io/posts/my-first-posts/</guid><description>こんにちは、jnakahodです
日々学んだことを気軽にアウトプットしようと思いブログを作りました。 他のブログサービスを使うより気軽になんでも書けるので個人ブログにしました。
できるだけ毎日、その日学んだこと投稿するのが目標です。
ちゃんとした記事ははてブとかに投稿しようかな。。</description></item></channel></rss>