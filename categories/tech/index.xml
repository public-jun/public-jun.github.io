<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Tech on Get stronger one day at a time.</title><link>https://public-jun.github.io/categories/tech/</link><description>Recent content in Tech on Get stronger one day at a time.</description><image><url>https://public-jun.github.io/first-blog-card-fs8.png</url><link>https://public-jun.github.io/first-blog-card-fs8.png</link></image><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 08 Feb 2022 23:58:58 +0900</lastBuildDate><atom:link href="https://public-jun.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo で作ったサイトにブログカード(OGP)を設定</title><link>https://public-jun.github.io/make-blog-card/</link><pubDate>Tue, 08 Feb 2022 23:58:58 +0900</pubDate><guid>https://public-jun.github.io/make-blog-card/</guid><description>1. はじめに Hugoで作ったサイトは共有された時、ブログカードはデフォルトでは作成されません。 ブログカードは下記の画像です。 タイトル、説明、画像といったものがのっています。 これらの情報を提供しているのが Open Graph Protocol(OGP) です。
今回はブログカードの画像を用意して、Hugo の config ファイルに OGP の設定を記述しブログカードを作成します。
2. Open Graph Protocol(OGP)、OGP 画像って何？？ 公式より
The Open Graph protocol enables any web page to become a rich object in a social graph. For instance, this is used on Facebook to allow any web page to have the same functionality as any other object on Facebook.
OGP を用いると任意の Web ページをリッチなソーシャルグラフのオブジェクトにすることができます。
要するに、ページのブログカードに必要な情報を取ってきてブログカードを作る仕組みの一つです。</description></item><item><title>HugoのサイトにUtterancesを使ってコメント機能をつける</title><link>https://public-jun.github.io/Hugo-utterances/</link><pubDate>Mon, 07 Feb 2022 19:45:13 +0900</pubDate><guid>https://public-jun.github.io/Hugo-utterances/</guid><description>1. はじめに Hugo でブログを作ってみたものの、デフォルトではコメント機能はついていません。
今回はUtterancesを使ってみたいと思います。
2. Hugoのコメント機能 Hugo にコメント機能をつける場合、いくつか選択肢があります。
鉄板は Disqus でしょうか。これは公式が Hugo をサポートしています。
Docs にも唯一設定手順が書いてあります。
以下、ドキュメントに紹介されているもの
Cactus Comments Commento Graph Comment Hyvor Talk IntenseDebate Isso Muut Remark42 Staticman Talkyard Utterances Disqus を使わない理由は無料プランだと広告がつくみたいです。あと登録するのも少し面倒に感じました。
でも今回使う Utterances は GitHub のアカウントだけなので、(一応想定読者はテックの人なので) GitHub の認証のみならコメントのハードルも低いかなと思いこれに決めました。
あと見た目がいい😊
Utterancesとは？？ A lightweight comments widget built on GitHub issues. Use GitHub issues for blog comments, wiki pages and more!
Utterances は軽量なコンポーネントと GitHub issues にコメントを書きこむ bot を提供しています。 これを使うと GitHub の issue と記事やページを紐付け、ページに issue を表示することができます。</description></item><item><title>HugoでGoogle Analyticsを使う</title><link>https://public-jun.github.io/Hugo-google-analytics/</link><pubDate>Sun, 06 Feb 2022 00:03:38 +0900</pubDate><guid>https://public-jun.github.io/Hugo-google-analytics/</guid><description>1. はじめに Hugoで作った静的サイトはそのままの設定ではGoogle検索にはかからないので、いくつか設定をしないといけません。
Google検索で表示されるまで Google Analyticsに登録 Google Search Consoleに登録 今回は Google Analytics 登録編です。
2. やってみる 測定を開始をクリック
任意のアカウント名にして次へ
プロパティ(サイトやアプリの名前) タイムゾーン 通貨 を入力して次へ 上から順に記入していけば大丈夫です。
プラットフォームはwebを選択
webサイト のURLを入力します。このサイトではhttps:///public-jun.github.ioのようになります。 ストリーム名はwebサイトのタイトルを入力すれば大丈夫です。
ストリームを作成すると測定IDが生成されます。
Hugoの設定 Hugoの場合、google analytics設定用のテンプレートが用意されているのでconfigファイルに追記します。
config.yml:(Google Analytics v4 (gtag.js))の場合、測定IDがGからはじまる
googleAnalytics: G-MEASUREMENT_ID config.yml:Google Analytics v3 (analytics.js)の場合、測定IDがUAからはじまる
googleAnalytics: UA-PROPERTY_ID 現在はgtagsで設定しておけば良いと思います。
これでHugo側の設定は完了です。 アップロードして確認してみましょう。
Google Analyticsのレポート -&amp;gt; リアルタイム を確認してみて、自分がアクセスしたときにユーザー数が0以外であれば成功です😄
最後に 次回はGoogle Search Consoleの設定をしてみたいと思いますがどうやら登録に時間がかかる場合もあるらしく、まだできていません。 登録出来次第まとめたいと思います。</description></item><item><title>HugoのサイトにTag機能を追加</title><link>https://public-jun.github.io/custom-taxonomies/</link><pubDate>Fri, 04 Feb 2022 15:39:20 +0900</pubDate><guid>https://public-jun.github.io/custom-taxonomies/</guid><description>きっかけ ブログにタグ機能が欲しかったから。
Taxonomyって何？？ Hugo includes support for user-defined groupings of content called taxonomies. Taxonomies are classifications of logical relationships between content.
タグやカテゴリなどのユーザーが定義した分類のことをタクソノミーという。
タクソノミー(Taxonomy)
コンテンツをグルーピングするための分類法
ターム(Term)
実際の具体的なタグやカテゴリの値
Taxonomyを使う Hugoはデフォルトでタグとカテゴリをサポートしている。
confingの設定 config.yml
taxonomies: category: categories tag: tags https://[サイトURL]/tags/
https://[サイトURL]/categories/
上記のURLにアクセスするとタグ一覧、カテゴリ一覧ページへアクセスできる。
ちなみにこのサイトでは
https://public-jun.github.io/tags/
https://public-jun.github.io/categories/
となる。
記事の Front matter内でタグ、カテゴリ追加 contents/posts/../記事.md
--- title: &amp;#34;HugoのサイトにTag機能を追加&amp;#34; date: 2022-02-04T15:39:20+09:00 draft: false tags: [42Tokyo, blog, Hugo, TIL] //追加 categories: [Tech] //追加 .</description></item></channel></rss>